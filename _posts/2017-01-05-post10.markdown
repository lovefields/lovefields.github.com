---
layout: post
title:  "CSS layout"
date:   2017-01-05 12:00:00 +0900
author: Lovefield
description: CSS 레이아웃 기초 를 설명하는 글입니다.
keywords : CSS,CSS3,CSS Layout,Layout,float,position,flex
image : /img/css.png
category : front_end
---

안녕하세요 lovefield 입니다.<br>
오늘은 <span class="blue">CSS layout</span> 에 대해서 설명해드리겠습니다.

<span class="blue">CSS layout</span> 에는 <b class="blue">float</b>, <b class="blue">position</b>, <b class="blue">flex</b> 가 있습니다.
<div class="emp40"></div>
<p class="h2"><b>Float layout</b></p>

<span class="blue">Float layout</span> 은 원래 layout 을 위한 용도가 아닙니다.<br>
워드 문서 같은 곳에서 다음과 같이 이미지와 텍스트를 정렬하기 위한 용도였죠.

<p data-height="300" data-theme-id="dark" data-slug-hash="EjmGyL" data-default-tab="result" data-user="lovefield" data-embed-version="2" data-pen-title="EjmGyL" class="codepen">See the Pen <a href="http://codepen.io/lovefield/pen/EjmGyL/">EjmGyL</a> by Ha Hyun Yong (<a href="http://codepen.io/lovefield">@lovefield</a>) on <a href="http://codepen.io">CodePen</a>.</p>
<script async src="https://production-assets.codepen.io/assets/embed/ei.js"></script>

하지만 실무를 비롯한 많은 곳에서 사용되고 있죠.<br>
그 이유는 호환성 때문입니다.<br>
<span class="blue">float</span>는 모든 브라우저에서 사용할 수 있기 때문이죠.

<div class="emp20"></div>
<p class="h3"><b>instructions</b></p>

{% highlight css %}
.item{float:left | right | none}
{% endhighlight %}

속성은 위와 같으며 각각 왼쪽 정렬 , 오른쪽 정렬 , 정렬 없음 입니다.

<p data-height="265" data-theme-id="dark" data-slug-hash="JEozGj" data-default-tab="result" data-user="lovefield" data-embed-version="2" data-pen-title="JEozGj" class="codepen">See the Pen <a href="http://codepen.io/lovefield/pen/JEozGj/">JEozGj</a> by Ha Hyun Yong (<a href="http://codepen.io/lovefield">@lovefield</a>) on <a href="http://codepen.io">CodePen</a>.</p>
<script async src="https://production-assets.codepen.io/assets/embed/ei.js"></script>

이 예제에서 보시면 <b class="blue">.clearfix</b> 라는 게 보이실 겁니다.<br>
<b class="blue">.clearfix</b>가 들어가는 이유는 위에서 쓴 바와 같이 <span class="blue">float</span>가 레이아웃을 위한 용도가 아니었기 때문입니다.<br>
그래서 사용시 부모가 사용한 자식의 사이즈를 못 가져오는 현상이 발생하죠.<br>
그렇기에 <span class="blue">float</span> 를 사용하셨다면 <b class="blue">.clearfix</b> 는 필수입니다.

{% highlight css %}
.clearfix::after{display:block;content:'';clear:both}
{% endhighlight %}

<div class="emp40"></div>
<p class="h2"><b>Position layout</b></p>

<span class="blue">Position layout</span>은 좌표값이라고 생각하시면 편합니다.<br>
부모로부터 <span class="blue">top,left,right,bottom</span> 값을 지정해주는 것 이죠.

<div class="emp20"></div>
<p class="h3"><b>instructions</b></p>

{% highlight css %}
.item{position:relative | absolute | fixed | none}
{% endhighlight %}

속성은 위와 같습니다.<br>
여기서 부모속성이 존재하는데.<br>
부모가 될 수 있는 속성은 <span class="blue">relative</span>, <span class="blue">absolute</span>, <span class="blue">fixed</span> 입니다.<br>
자식 속성은 <span class="blue">absolute</span> 입니다.

즉 <span class="blue">absolute</span>는 <span class="blue">relative</span>, <span class="blue">absolute</span>, <span class="blue">fixed</span> 를 기준으로 <span class="blue">top,left,right,bottom</span> 값을 지정 할 수 있습니다.<br>
<span class="blue">absolute</span> 는 부모를 기준으로 잡히기 때문에 바로 위의 부모가 부모속성이 아닐 시 그 다음 부모를 찾습니다.<br>
그렇기에 부모속성이 없을 시 최상위 인 body를 기준으로 위치가 잡히게 되지요.

<p data-height="265" data-theme-id="dark" data-slug-hash="rVmQmM" data-default-tab="result" data-user="lovefield" data-embed-version="2" data-pen-title="rVmQmM" class="codepen">See the Pen <a href="http://codepen.io/lovefield/pen/rVmQmM/">rVmQmM</a> by Ha Hyun Yong (<a href="http://codepen.io/lovefield">@lovefield</a>) on <a href="http://codepen.io">CodePen</a>.</p>
<script async src="https://production-assets.codepen.io/assets/embed/ei.js"></script>

위의 예제를 보면<br>
<span class="blue">relative</span> 는 자기 자신을 기준으로 <br>
<span class="blue">absolute</span> 는 <span class="blue">relative</span>을 기준으로 <br>
<span class="blue">fixed</span> 는 브라우저 창을 기준으로 <br>
되는 것을 볼 수 있습니다.

<div class="emp40"></div>
<p class="h2"><b>Flex layout</b></p>

<span class="blue">Flex layout</span> 은 <b class="blue">CSS3</b>에서 나온 layout 을 위한 요소입니다.<br>
그렇기에 속성도 다양하고 다뤄야 할 것도 많은데요.<br>
<span class="blue">Flex layout</span> 은 따로 작성하도록 하겠습니다.

