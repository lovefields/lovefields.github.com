---
layout: post
title:  "App Bar Custom"
date: 2017-01-06 12:00:00 +0900
author: 민갤
description: Android Studio 
keywords : Android Studio,Android,Studio,AppBar,ActionBar,Toobar,Custom
category : android
---

안드로이드 앱의 상단에 있는 바를 App Bar라 한다. (ActionBar, Toolbar 등)<br>
이 앱 바를 직접 만들어 보자.<br>
<br>

<span class="blue">layout</span>을 하나 생성하여 보여주고 싶은 앱 바를 만든다. <br>
{% highlight xml %}
<?xml version="1.0" encoding="utf-8"?>
<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
              android:layout_width="match_parent"
              android:layout_height="match_parent"
              android:orientation="horizontal">

<ImageButton
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:id="@+id/imagebutton1"
        android:scaleType="centerInside"
        app:srcCompat="@drawable/yourimage"
        android:background="@null"
        android:layout_gravity="left|center_vertical"/>

    <TextView
        android:id="@+id/textview"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:text="textView"
        android:textColor="color"
        android:textSize="dimention"
        android:layout_weight="1"
        android:gravity="center"
        android:layout_gravity="center"/>

    <ImageButton
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        app:srcCompat="@drawable/yourimage"
        android:id="@+id/imagebutton2"
        android:background="@null"
        android:layout_gravity="right|center_vertical"/>
</LinearLayout>
{% endhighlight %}
<br>

앱 바의 색상은 <span class="blue">styles.xml</span> 에서 지정한다.<br>
보통 Theme style을 새로 만들어서 사용하는 데 여기서는 안드로이드 스튜디오가 친절하게 마련해준 style을 이용해서 만든다.<br>
{% highlight xml %}
<resources>
    <!-- Base application theme. -->
    <style name="AppTheme" parent="Theme.AppCompat.Light.DarkActionBar">
        <!-- Customize your theme here. -->
        <item name="actionBarSize">45dp</item>
        <item name="colorPrimary">@color/customColor</item>
        <item name="colorPrimaryDark">@color/customColor</item>
        <item name="colorAccent">@color/customColor</item>
    </style>
</resources>
{% endhighlight %}
actionBarSize는 앱 바의 높이를 지정한다.<br>
colorPrimary는 앱 바의 색상을 지정한다.<br>
colorPrimaryDark는 앱 바 위의 상태 표시줄의 색상을 지정한다.<br>
colorAccent는 프로그레스바, 체크 박스, 밑줄 표시 등 강조 표시의 색상을 지정한다.<br>
<br>

만일 Theme style을 직접 만들었다면 <span class="blue">AndroidManifest</span>의 application theme를 본인이 만든 style로 지정해준다.
{% highlight xml %}
<application
        ...
        android:theme="@style/yourCustomThemeStyleName">
{% endhighlight %}
<br>

직접 만든 앱 바를 보여주고 싶은 <span class="blue">Activity</span>에 다음 코드를 입력한다.<br>
{% highlight java %}
import android.support.v7.app.ActionBar;

...

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
       
	...

        ActionBar actionBar = getSupportActionBar();
        actionBar.setDisplayOptions(ActionBar.DISPLAY_SHOW_CUSTOM);
        actionBar.setCustomView(R.layout.custom_bar);
        actionBar.setElevation(0);
    }
}
{% endhighlight %}
ActionBar의 import는 지원 라이브러리인 support.v7.app 으로 지정한다.<br>
setDisplayOptions에 DISPLAY_SHOW_CUSTOM을 입력해 사용자가 정의한 뷰를 사용하도록 지정한다.<br>
setCustomView는 사용자가 지정한 뷰(layout)를 보여준다.<br>
setElevation은 앱 바의 Z축 높이를 조정한다. 0을 입력하면 그림자가 보이지 않는다.<br>
<br>

만일 특정 Activity에서는 앱 바를 보이고 싶지 않다면 다음 코드를 입력한다.<br>
{% highlight java %}
actionBar.hide();
{% endhighlight %}
