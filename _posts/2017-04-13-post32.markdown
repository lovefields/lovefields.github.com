---
layout: post
title:  "Java 변수"
date:   2017-04-13 10:00:00 +0900
author: 민갤
description: JAVA 변수
keywords : android,java,변수,variable,androidstudio
image : /img/java.png
category : android
---

<b class="h2">변수 Variable </b><br>
단 하나의 값(data)을 저장할 수 있는 메모리 공간. <br> 
저장 공간. <br>
<br>

<b>변수 선언</b><br>
타입 이름 = 값;<br>
변수를 선언하면 메모리의 빈 공간에 변수 타입에 맞는 저장공간이 확보되고, 그 안에 값이 담긴다.<br>
변수 타입마다 저장공간의 크기가 다르며 변수 이름을 통해 생성된 공간을 사용할 수 있다.<br>
{% highlight java %}
int a = 1;
{% endhighlight %}
<br>

<b>변수 타입 Variable Type </b><br>
저장하고자 하는 값의 종류.<br>
1은 정수(Integer)이므로 변수의 타입은 int 또는 Integer.<br>
타입이 같은 변수는 콤마(,)를 구분자로 해서 같이 선언할 수 있다.<br>
{% highlight java %}
int a , b;
int c = 0, d = 0;
{% endhighlight %}
<br>

<b>변수 이름</b><br>
메모리 공간의 이름.<br>
값이 저장되는 공간의 이름.<br>
<br>

<b>변수 초기화(Initialization)</b><br>
메모리는 여러 프로그램이 공유하는 자원이다.<br>
메모리에 새로운 값이 저장되면 기존의 값이 사라지기 때문에 반드시 초기화가 필요하다.<br>
값을 저장할 때는 대입연산자(=)를 사용한다.<br>
지역변수는 초기화가 필수지만 클래스변수와 인스턴스변수는 생략할 수 있다.<br>
<br>

<b>두 변수의 값 교환하기</b><br>
변수는 컵, 값은 물과 같아서 두 내용물을 바꾸려면 빈 컵이 필요하다.<br>
임시 저장공간으로 쓰일 변수를 하나 더 선언해서 값을 회전시킨다.<br>
{% highlight java %}
int a = 1 , b =5;
int temp;

temp = a;
a = b;
b = temp;
{% endhighlight %}
<br>
<br>

<b class="h2">명명규칙</b><br>
변수 이름이나 클래스 이름 등 프로그래밍에서 사용되는 모든 이름을 식별자(Identifier)라고 한다.<br>
식별자는 같은 영역 내에서 서로 구분될 수 있어야 한다.<br>
이름을 지을 때 지켜야하는 규칙은 다음과 같다.<br>
<br>

<b>필수 규칙</b><br>
&#149; 대소문자가 구분된다. ex) a ≠ A<br>
&#149; 길이에 제한이 없다.<br>
&#149; 숫자로 시작하면 안된다. ex)  1a : X, a1 : O<br>
&#149; 특수문자는 '_'와 '$'만 허용한다.<br>
&#149; 예약어를 사용하면 안된다.<br>
<br>

<b>권장 규칙</b><br>
&#149; 클래스 이름의 첫 글자는 항상 대문자로 한다. ex) Love<br>
&#149; 변수와 메서드 이름의 첫 글자는 항상 소문자로 한다. ex) love<br>
&#149; 여러 단어로 이루어진 이름은 단어의 첫 글자를 대문자로 한다. ex) LoveField or loveField<br>
&#149; 상수의 이름은 모두 대문자로 한다. ex) LOVE<br>
&#149; 상수가 여러 단어로 이루어진 경우 '_'로 구분한다. ex) LOVE_FIELD<br>
<br>

<b>예약어 Keyword</b><br>
프로그래밍 언어의 구문에 사용되는 단어.<br>
클래스, 변수, 메서드의 이름으로 사용할 수 없다.<br>
{% highlight xml %}
abstract assert boolean break byte case catch char class const continue default do double else enum extends false final finally float for if goto implements import instanceof int interface long native new null package private protected public return short static strictfp super switch synchronized this throw throws transient true try void volatile while
{% endhighlight %}

<br>
<br>

참고 서적: 자바의 정석 3판